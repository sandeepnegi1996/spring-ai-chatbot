# .github/workflows/maven.yml

# Workflow name for easy identification in GitHub Actions UI.
name: Maven & Spring Boot CI/CD

# Define the events that trigger this workflow.
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

# A workflow run is made up of one or more jobs.
jobs:
  # Job 1: Build and Test
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Grant execute permission to mvnw
        run: chmod +x mvnw

      - name: Build and Test with Maven
        run: ./mvnw -B clean package

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: spring-boot-app
          path: target/*.jar

  # Job 2: Build and Push Docker Image
  docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: spring-boot-app
          path: target/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        # Best practice: Use GitHub secrets for sensitive information.
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/lei-processor-app:latest
          file: ./Dockerfile

  # Job 3: Deploy to a Free Hosting Provider
#  deploy:
#    # This job runs after the 'docker' job is complete.
#    needs: docker
#    runs-on: ubuntu-latest
#    environment: production
#    steps:
#      - name: Deploy to Render
#        # This is a generic example using a webhook to trigger a deployment.
#        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}
